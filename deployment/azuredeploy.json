{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "18257897418566001659"
    }
  },
  "parameters": {
    "resourceNameSuffix": {
      "type": "string",
      "metadata": {
        "description": "Something like `tb-azbasics-jsc`"
      }
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "alertReceiverName": {
      "type": "string",
      "defaultValue": "Foo Bar"
    },
    "alertReceiverEmail": {
      "type": "string",
      "defaultValue": "foo@bar.ch"
    },
    "downloadMetricName": {
      "type": "string",
      "defaultValue": "Download",
      "metadata": {
        "description": "Metric name dispatched in code to indicate usage of get file function"
      }
    }
  },
  "variables": {
    "storageAccountName": "[replace(format('st-{0}', parameters('resourceNameSuffix')), '-', '')]",
    "storageBlobContainerName": "files",
    "funcAppName": "[format('func-{0}', parameters('resourceNameSuffix'))]",
    "keyVaultName": "[format('kv-{0}', parameters('resourceNameSuffix'))]",
    "keyVaultSecretStorageAccountConnectionString": "StorageConnectionString"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[format('log-{0}', parameters('resourceNameSuffix'))]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-{0}', parameters('resourceNameSuffix'))]",
      "location": "[parameters('resourceLocation')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('resourceNameSuffix')))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('resourceNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "properties": {
        "changeFeed": {
          "enabled": false
        },
        "restorePolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": true,
          "days": 7
        },
        "isVersioningEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', variables('storageBlobContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-11-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('funcAppName')), '2022-03-01', 'full').identity.principalId]",
            "permissions": {
              "certificates": [],
              "keys": [],
              "secrets": [
                "get"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": false,
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "LogAnalytics",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('resourceNameSuffix')))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('resourceNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('asp-{0}', parameters('resourceNameSuffix'))]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "functionapp",
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('funcAppName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[format('{0}.azurewebsites.net', variables('funcAppName'))]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[format('{0}.scm.azurewebsites.net', variables('funcAppName'))]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('resourceNameSuffix')))]",
        "siteConfig": {
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 0,
          "ftpsState": "Disabled"
        },
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None",
        "publicNetworkAccess": "Enabled",
        "keyVaultReferenceIdentity": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('resourceNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('funcAppName'), 'appsettings')]",
      "properties": {
        "AzureWebJobsStorage": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value)]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('resourceNameSuffix'))), '2020-02-02').ConnectionString]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
        "WEBSITE_CONTENTSHARE": "[variables('funcAppName')]",
        "StorageConnectionString": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
        "StorageBlobContainer": "[variables('storageBlobContainerName')]",
        "DownloadMetricName": "[parameters('downloadMetricName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('resourceNameSuffix')))]",
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('funcAppName'), 'GetFile')]",
      "properties": {
        "test_data": "{\"method\":\"get\",\"queryStringParams\":[{\"name\":\"filename\",\"value\":\"test.png\"}],\"headers\":[],\"body\":\"\"}",
        "invoke_url_template": "[format('https://{0}.azurewebsites.net/api/files/{{filename}}', variables('funcAppName'))]",
        "language": "CSharp",
        "isDisabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('funcAppName'), 'ListFiles')]",
      "properties": {
        "test_data": "{\"method\":\"get\",\"queryStringParams\":[],\"headers\":[],\"body\":\"\"}",
        "invoke_url_template": "[format('https://{0}.azurewebsites.net/api/files', variables('funcAppName'))]",
        "language": "CSharp",
        "isDisabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[format('ag-{0}', parameters('resourceNameSuffix'))]",
      "location": "Global",
      "properties": {
        "groupShortName": "TechBier",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "[parameters('alertReceiverName')]",
            "emailAddress": "[parameters('alertReceiverEmail')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[format('ar-{0}', parameters('resourceNameSuffix'))]",
      "location": "global",
      "properties": {
        "description": "Notification when > 5 file downloads per hour",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('resourceNameSuffix')))]"
        ],
        "evaluationFrequency": "PT30M",
        "windowSize": "PT1H",
        "criteria": {
          "allOf": [
            {
              "threshold": 5,
              "name": "Metric1",
              "metricNamespace": "Azure.ApplicationInsights",
              "metricName": "[parameters('downloadMetricName')]",
              "operator": "GreaterThan",
              "timeAggregation": "Total",
              "skipMetricValidation": false,
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": false,
        "targetResourceType": "microsoft.insights/components",
        "targetResourceRegion": "[parameters('resourceLocation')]",
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag-{0}', parameters('resourceNameSuffix')))]",
            "webHookProperties": {}
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', format('ag-{0}', parameters('resourceNameSuffix')))]",
        "[resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('resourceNameSuffix')))]"
      ]
    }
  ]
}